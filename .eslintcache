[{"/Users/tuttongchan/Desktop/react-flashcards/src/App.js":"1","/Users/tuttongchan/Desktop/react-flashcards/src/FlashcardList.js":"2","/Users/tuttongchan/Desktop/react-flashcards/src/Flashcard.js":"3","/Users/tuttongchan/Desktop/react-flashcards/src/index.js":"4"},{"size":2969,"mtime":1612262288643,"results":"5","hashOfConfig":"6"},{"size":328,"mtime":1612153341288,"results":"7","hashOfConfig":"6"},{"size":1280,"mtime":1612243484851,"results":"8","hashOfConfig":"6"},{"size":226,"mtime":1612207576412,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"156snd2",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"/Users/tuttongchan/Desktop/react-flashcards/src/App.js",["21"],"import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport './app.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then((res) => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n\n  useEffect(() => {}, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .get('https://opentdb.com/api.php', {\n        params: {\n          amount: amountEl.current.value,\n          category: categoryEl.current.value,\n        },\n      })\n      .then((res) => {\n        setFlashcards(\n          res.data.results.map((questionItem, index) => {\n            const answer = decodeString(questionItem.correct_answer);\n            const options = [\n              ...questionItem.incorrect_answers.map((a) => decodeString(a)),\n              answer,\n            ];\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - 0.5),\n            };\n          })\n        );\n        console.log(res.data);\n      });\n  }\n\n  return (\n    <>\n      <div className=\"main-content\">\n        <div className=\"logo\">\n          <h1>QuizFace</h1>\n        </div>\n        <form className=\"header\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">Category</label>\n            <select id=\"category\" ref={categoryEl}>\n              {categories.map((category) => {\n                return (\n                  <option value={category.id} key={category.id}>\n                    {category.name}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"amount\">Number of Questions</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              step=\"1\"\n              defaultValue={10}\n              ref={amountEl}\n            />\n          </div>\n          <div className=\"form-group\">\n            <button className=\"btn\">Generate</button>\n          </div>\n        </form>\n      </div>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n  );\n}\n\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: 'What is 2 + 2?',\n    answer: '4',\n    options: ['2', '3', '4', '5'],\n  },\n  {\n    id: 2,\n    question: 'Question 2?',\n    answer: 'Answer',\n    options: ['Answer', 'Answer 1', 'Answer 2', 'Answer 3'],\n  },\n];\n\nexport default App;\n","/Users/tuttongchan/Desktop/react-flashcards/src/FlashcardList.js",[],"/Users/tuttongchan/Desktop/react-flashcards/src/Flashcard.js",[],"/Users/tuttongchan/Desktop/react-flashcards/src/index.js",["22"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["23","24"],{"ruleId":"25","severity":1,"message":"26","line":97,"column":7,"nodeType":"27","messageId":"28","endLine":97,"endColumn":24},{"ruleId":"25","severity":1,"message":"29","line":4,"column":8,"nodeType":"27","messageId":"28","endLine":4,"endColumn":13},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},"no-unused-vars","'SAMPLE_FLASHCARDS' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-global-assign","no-unsafe-negation"]